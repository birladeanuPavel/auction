buildscript {
	ext {
		springBootVersion = '1.4.0.RELEASE'
	}
	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'com.moowork.gradle:gradle-node-plugin:0.12'
	}
}

plugins {
	id 'io.franzbecker.gradle-lombok' version '1.7'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.6"
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: "com.moowork.node"

jar {
	baseName = 'auction'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral();
	jcenter();
}

ext {
//	generatedSourcesDir = file("${buildDir}/generated-sources")
	querydslVersion    = "4.1.3"
//	versionJQuery = '2.1.4'
//	versionBootstrap = '3.3.4'
//	versionAngularJs = '1.3.8'
}

//Delombok
import io.franzbecker.gradle.lombok.task.DelombokTask

task delombok(type: DelombokTask) {
	args("src/main/java", "-d", "src/delombok/java")
}

//Lombok
lombok { // optional: values below are the defaults
	version = "1.16.10"
}

//Webpack
task webpack(type: NodeTask, dependsOn: 'npmInstall') {
	script = project.file('node_modules/.bin/webpack')
}

processResources.dependsOn 'webpack'

clean.delete << file('src/main/webapp/')
clean.delete << file('src/delombok')

//Querydsl
querydsl {
	jpa = true
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile("org.springframework.boot:spring-boot-starter-data-rest")
	compile('org.springframework.boot:spring-boot-starter-validation')
//	compile('org.springframework.session:spring-session')
	runtime('mysql:mysql-connector-java')
	compile "com.querydsl:querydsl-core:${querydslVersion}"
	compile "com.querydsl:querydsl-jpa:${querydslVersion}"
	compile "com.querydsl:querydsl-apt:${querydslVersion}"

	compile ('org.springframework.boot:spring-boot-starter-log4j2')
//	Test
	testCompile('org.testng:testng:6.9.13.6')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

configurations {
	all*.exclude module: 'spring-boot-starter-logging'
}


eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}
